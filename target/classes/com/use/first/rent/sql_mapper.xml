<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.use.first.rent.RentDAO">

<select id="rentList" resultType="com.use.first.rent.RentVO">
		select rental.r_id, rental.r_mid, rental.r_pid, product.p_name,
		rental.r_sdate, rental.r_rent, rental.r_state, rental.r_pdate from
		rental, product
		where rental.r_pid = product.p_id
		<if test="searchType == 't'.toString()">
				AND r_mid LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND r_pid LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'w'.toString()">
				AND product.p_name LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'tc'.toString()">
				AND r_state LIKE CONCAT('%', #{keyword},'%')
			</if>
		ORDER BY r_id desc
		limit #{pageStart}, #{perPageNum}
	</select>

	<select id="getRentTotalCount" resultType="int">
	<![CDATA[
		select count(*) from
		rental, product
		where rental.r_pid = product.p_id
		]]>
		<include refid="searchCondition"></include>
	</select>
	<sql id="searchCondition">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND r_mid LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND r_pid LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'w'.toString()">
				AND product.p_name LIKE CONCAT('%', #{keyword},'%')
			</if>
			<if test="searchType == 'tc'.toString()">
				AND r_state LIKE CONCAT('%', #{keyword},'%')
			</if>
		</if>
	</sql>

	
	<insert id="rentInsert" parameterType="com.use.first.rent.RentVO">
		<![CDATA[
		insert into rental(r_id, r_mid, r_pid, r_sdate, r_rent, r_state, r_pdate)
		values(#{r_id},#{r_mid},#{r_pid}, #{r_sdate}, #{r_rent}, #{r_state}, #{r_pdate})
		]]>
	</insert>
	
	<select id="rentInfo" resultType="com.use.first.rent.RentVO">
		<![CDATA[
		select  r_id, r_mid, r_pid, r_sdate, r_rent, r_state, r_pdate from rental where r_id=#{r_id}
		]]>
	</select>
	
	<update id="rentUpdate" parameterType="com.use.first.rent.RentVO">
		<![CDATA[
		update rental set r_state = #{r_state} where r_id = #{r_id}
		]]>
	</update>
	
	<update id="rentReturn">
		<![CDATA[
		update rental set r_state = '반납 완료' where r_id = #{r_id}
		]]>
	</update>
	
	<select id="returnList" resultType="com.use.first.rent.RentVO">
		<![CDATA[
		select  r_id, r_mid, r_pid, product.p_name, r_sdate, r_rent, r_state, r_pdate from rental,product where (r_state='반납 요청' or (r_state='대여중' and r_sdate+3<now())) and r_pid=p_id;
		]]>
	</select>
	
	
	
	
	<!-- 성훈 시작 -->
   <select id="rentListByMid" parameterType="String" resultType="com.use.first.rent.RentVO">
      <![CDATA[
      select product.p_name, rental.r_sdate, rental.r_state, rental.r_pdate from rental, product
      where product.p_id = rental.r_pid and r_mid = #{r_mid} and r_state not like concat('%',#{r_state},'%') 
      order by r_id desc
      ]]>
   </select>
   
   <select id="purchaseListByMid" parameterType="String" resultType="com.use.first.rent.RentVO">
      <![CDATA[
      select product.p_name, rental.r_sdate, rental.r_state, rental.r_pdate from rental, product
      where product.p_id = rental.r_pid and r_mid = #{r_mid} and r_state like concat('%',#{r_state},'%') 
      order by r_id desc
      ]]>
   </select>
   <!-- 성훈 끝 -->
	
	
	
	
</mapper>



